#include <vector>
#include <algorithm>
using namespace std;

class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        int n = spells.size();
        int m = potions.size();
        vector<int> pairs(n, 0);

        sort(potions.begin(), potions.end());

        for (int i = 0; i < n; ++i) {
            int left = 0;
            int right = m - 1;

            while (left <= right) {
                int mid = left + (right - left) / 2;

                if (1LL * spells[i] * potions[mid] >= success) {
                    pairs[i] += (right - mid + 1); // All elements from mid to right are successful pairs
                    right=mid-1;// Move left to look for smaller potions
                } else {
                    left=mid+1; // Move right to look for larger potions
                }
            }
        }

        return pairs;
    }
};
