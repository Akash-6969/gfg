Balanced strings are those that have an equal quantity of 'L' and 'R' characters.

Given a balanced string s, split it into some number of substrings such that:

Each substring is balanced.
Return the maximum number of balanced strings you can obtain.


Input: s = "RLRRLLRLRL"
Output: 4
Explanation: s can be split into "RL", "RRLL", "RL", "RL", each substring contains same number of 'L' and 'R'.


class Solution {
public:
    int balancedStringSplit(string s) {
        int countmax=0;
        int count=0;
        for(int i=0;i<s.size();i++){
            if(s[i]=='L'){
                count++;
            }else {
                count--;
            }
            if(count==0){
                countmax++;
            }
        }
   return countmax;     
    }
};