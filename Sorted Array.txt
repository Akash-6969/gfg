Given an array of integers nums, sort the array in ascending order and return it.

You must solve the problem without using any built-in functions in O(nlog(n)) time complexity and with the smallest space complexity possible.

 

Example:
Input: nums = [5,2,3,1]
Output: [1,2,3,5]
Explanation: After sorting the array, the positions of some numbers are not changed (for example, 2 and 3), while the positions of other numbers are changed (for example, 1 and 5).

class Solution {
public:
    vector<int> sortArray(vector<int>& nums) {
       map<int,int>mp;
       for(auto temp:nums){
        mp[temp]++;
       }
       vector<int>ans;
       for(auto it=mp.begin();it!=mp.end();it++){
        while(it->second>0){
            ans.push_back(it->first);
            it->second--;
        }
       }
       return ans;
    }
};