//{ Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    
        // code here 
 vector<int> spirallyTraverse(vector<vector<int>> matrix, int r, int c) {
    int left = 0, right = c - 1;
    int top = 0, bottom = r - 1;
    vector<int> ans; // Changed to vector<int> instead of vector<vector<int>>

    while (top <= bottom && left <= right) {
        for (int i = left; i <= right; i++) {
            ans.push_back(matrix[top][i]); // Use push_back to add elements to the 1D vector
        }
        top++;
        for (int i = top; i <= bottom; i++) {
            ans.push_back(matrix[i][right]);
        }
        right--;
        if (top <= bottom) { // Check if there are rows left before going up
            for (int i = right; i >= left; i--) {
                ans.push_back(matrix[bottom][i]);
            }
            bottom--;
        }
        if (left <= right) { // Check if there are columns left before moving left
            for (int i = bottom; i >= top; i--) {
                ans.push_back(matrix[i][left]);
            }
            left++;
        }
    }
    return ans;
}

};
