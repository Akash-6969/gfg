class Solution {
public:
vector<vector<int>>result;
void solve(int start,int n,int k,vector<int>temp){
    if(k==0){result.push_back(temp);
    return ;
    }
    if(start>n){
        return ;
    }
    for(int i=start;i<=n;++i){ this is method 1 of backtracking in this we use loop for find the no case 
        temp.push_back(i);
        solve(i+1,n,k-1,temp);
        temp.pop_back();
    }


    // temp.push_back(start);  this is method 2 of backtracking 
    // solve(start+1,n,k-1,temp);
    // temp.pop_back();
    // solve(start+1,n,k,temp);
}

    vector<vector<int>> combine(int n, int k) {
        vector<int>temp;
        solve(1,n,k,temp);
        return result;
    }
};