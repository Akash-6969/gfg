Given n points on a 2D plane where points[i] = [xi, yi], Return the widest vertical area between two points such that no points are inside the area.

A vertical area is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The widest vertical area is the one with the maximum width.

Note that points on the edge of a vertical area are not considered included in the area.


Input: points = [[8,7],[9,9],[7,4],[9,7]]
Output: 1
Explanation: Both the red and the blue area are optimal.
Example 2:

Input: points = [[3,1],[9,0],[1,0],[1,4],[5,3],[8,8]]
Output: 3

class Solution {
public:
    int maxWidthOfVerticalArea(vector<vector<int>>& points) {
       vector<int>result;
       for(auto it:points){
        result.push_back(it[0]);

       }
       sort(result.begin(),result.end());
       int maxdiff=0;
       for(int i=1;i<result.size();i++){
        maxdiff=max(maxdiff,result[i]-result[i-1]);
       }   
       return maxdiff;
    }
};