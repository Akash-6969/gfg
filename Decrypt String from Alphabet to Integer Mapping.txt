You are given a string s formed by digits and '#'. We want to map s to English lowercase characters as follows:

Characters ('a' to 'i') are represented by ('1' to '9') respectively.
Characters ('j' to 'z') are represented by ('10#' to '26#') respectively.
Return the string formed after mapping.

The test cases are generated so that a unique mapping will always exist.

Example 1:

Input: s = "10#11#12"
Output: "jkab"
Explanation: "j" -> "10#" , "k" -> "11#" , "a" -> "1" , "b" -> "2".


class Solution {
public:
    string freqAlphabets(string s) {
        string result;
        int i=0;
        while(i<s.size()){
            if(i+2<s.size() && s[i+2]=='#'){
                int num=stoi(s.substr(i,2));
                result+=char('a'+num-1);
                i+=3;
            }else{
                result+=char('a'+(s[i]-'1'));
                i+=1;
            }
        }
        return result;
    }
};